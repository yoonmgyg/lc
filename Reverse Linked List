class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        // create new head of linked list
        ListNode* node = nullptr;

        // loop through linked list
        while (head != nullptr) {
            // store next pointer into temp
            ListNode* temp = head->next;
            // set previous node as next node
            head->next = node;
            // update previous node
            node = head;
            // update head to next node
            head = temp;
        }

        return node;        
    }
};
