class Solution {
public:
    int height (TreeNode* root)  { // get height of root through dfs
        if (!root) {
            return 0;
        }
        int left = height(root->left);
        int right = height(root->right);
        return max(left, right) + 1; 
    }
    bool isBalanced(TreeNode* root) {
        if (!root) {
            return true;
        }
        return abs(height(root->left) - height(root->right)) <= 1; // check if difference of height of both subtrees is not greater than 1
    }
};
