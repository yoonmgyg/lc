class Solution:
    def longestPalindrome(self, s: str) -> str: 
        if len(s)<=1:
            return s
        if s==s[::-1]:
            return s
        else:
            max_len = 1
            max_s = s[0]
            for center in range(0,len(s)):                
                clim = min(center,len(s)-center) 
                found=False
                for xlen in range(max_len+1,2*clim+1+1):                    
                    if xlen%2==1:                        
                        x = s[center-xlen//2:center+xlen//2+1]
                        if x==x[::-1]:
                            if len(x)>max_len: 
                                max_len = len(x)
                                max_s = x 
                                found=True
                    else:
                        x = s[center-xlen//2:center+xlen//2]
                        if x==x[::-1]:
                            if len(x)>max_len: 
                                max_len = len(x)
                                max_s = x                     
                                found=True
                    if xlen==max_len+2 and not found:
                        break
        return max_s
