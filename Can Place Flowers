class Solution {
public:
    bool canPlaceFlowers(vector<int>& flowerbed, int n) {
        if (n == 0) 
            return true;

        int flowers = 0;
        // loop through flowerbed
        for (int i = 0; i < flowerbed.size(); i++) {
            // check that pot, and adjacent pots are empty
            bool leftEmpty = i == 0 || flowerbed[i-1] == 0;
            bool rightEmpty = i == flowerbed.size() - 1 || flowerbed[i+1] == 0;
            if (flowerbed[i] == 0 && leftEmpty && rightEmpty) {
                // plant flower
                flowerbed[i] = 1;
                flowers++;
            }
        }

        return flowers >= n;
    }
};
