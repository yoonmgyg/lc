class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        // merges intervals within intervals
        // sort intervals
        sort(begin(intervals), end(intervals));
        vector<vector<int>> mergedIntervals;
        // initialize first interval
        int startInterval = intervals[0][0];
        int endInterval = intervals[0][1];
        // loop through intervals and merge if within previous interval
        for (int i = 1; i < intervals.size(); i++) {
            if (intervals[i][0] > endInterval) {
                mergedIntervals.push_back({startInterval, endInterval});
                startInterval = intervals[i][0];
                endInterval = intervals[i][1];
            }
            else if (intervals[i][1] > endInterval) {
                endInterval = intervals[i][1];
            }
        }

        mergedIntervals.push_back({startInterval, endInterval});
        return mergedIntervals;
    }
};
