vector<vector<int>> insertInterval(vector<vector<int>>& intervals, vector<int>& newInterval) {
    std::vector<std::vector<int>> result;
    int n = intervals.size();
    int i = 0;
    
    // Add non-overlapping intervals
    while (i < n && intervals[i][1] < newInterval[0]) {
        result.push_back(intervals[i]);
        i++;
    }
    
    // Merge intervals that overlap
    while (i < n && intervals[i][0] <= newInterval[1]) {
        newInterval[0] = min(newInterval[0], intervals[i][0]);
        newInterval[1] = max(newInterval[1], intervals[i][1]);
        i++;
    }


    // Insert new interval
    result.push_back(newInterval); 
    
    // Add remaining intervals
    while (i < n) {
        result.push_back(intervals[i]);
        i++;
    }
    
    return result;
}
