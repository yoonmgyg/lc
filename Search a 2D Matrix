class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        // search matrixz for target value
        // set matrix dimensions
        int m = matrix.size();
        int n = matrix[0].size();

        // get start and end elements
        int start = 0;
        int end = m*n - 1;
        
        // binary search throughout matrix
        while (start <= end) {
            // get middle value of matrix
            int mid = start + (end - start) / 2;
            // calculate row and column of middle value;
            int midValue = matrix[mid / n][mid % n];

            if (midValue == target) {
                return true;
            }

            else if (midValue < target) {
                left = mid + 1;
            }
            else {
                right = mid - 1;
            }
        }
    }
};
