class Solution {
public:
    vector<int> v;
    int i = 0;
    // insert inorder value into vector
    void inorder(TreeNode* root) {
        if (!root) return;
        inorder(root->left);
        v.push_back(root->val);
        inorder(root->right);
    }
    // compare values between value and node and swap if different
    void check(TreeNode* root) {
        if (!root) return;
        check(root->left);
        if (v[i]!=root->val) swap(v[i],root->val);
        i++;
        check(root->right);
    }

    // insert node into vector, sort and then compare with tree
    void recoverTree(TreeNode* root) {
        inorder(root);
        sort(v.begin(),v.end());
        check(root);
    }
};
