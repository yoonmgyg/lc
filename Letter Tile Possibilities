class Solution {
public:
    int count = 0;
    void helper(string nums, int start){
        count++; // count each instance of helper as tile
        for (int i = start; i < nums.size(); i++) { // loop through nums to start with each letter
            if (i == start || nums[start] != nums[i]) { // if starting index or not equal to start, swap numbers and start at next index
                swap(nums[start], nums[i]);
                helper(nums, start+1);
            }
        }
        return ;
    }
    int numTilePossibilities(string tiles) {
        int start = 0;
        sort(tiles.begin(), tiles.end()); // sort tiles to get letters in sequence
        helper(tiles, start);
        return count-1;
    }
};
