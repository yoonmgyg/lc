/*
Get sliding window of k elements form both ends and get max
*/
class Solution {
public:
    int maxScore(vector<int>& cardPoints, int k) {
        int res = 0;
        for (int i = 0; i < k; ++i) { // add first k elements
            res += cardPoints[i];
        }

        int curr = res;
        for (int i = k-1; i >= 0; --i) { // loop through k elements
            curr -= cardPoints[i]; // remove last element 
            curr += cardPoints[cardPoints.size() - k + i]; // add elements starting from end
            res = max(res, curr);
        }

        return res;
    }
};
