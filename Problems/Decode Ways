// Gets number of ways by storing last two methods of ways
class Solution {
public:
    int numDecodings(string s) {
        int n = s.length();
        if (n == 0 || s[0] == '0') {
            return 0;
        }

        int firstDigit = 1; // dp[i-2]
        int secondDigit = 1; // dp[i-1]

        for (int i = 2; i <= n; ++i) {
            int current = 0;

            int oneDigit = s[i-1] - '0';
            if (oneDigit != 0) {
                current += secondDigit;
            }

            int twoDigits = stoi(s.substr(i-2, 2));
            if (10 <= twoDigits && twoDigits <= 26) {
                current += firstDigit;
            }

            firstDigit = secondDigit;
            secondDigit = current;
        }

        return secondDigit;
    }
};
