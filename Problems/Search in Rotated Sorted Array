class Solution {
public:
    int search(vector<int>& nums, int target) {
        int left = 0;
        int right = nums.size() - 1;

        while (left <= right) { // bin search
            int mid = left + (right - left) / 2;
            if (nums[mid] == target) {
                return mid;
            } else if (nums[mid] < nums[left]) { // if mid less than left
                if (nums[mid] <= target && target <= nums[right]) { // if target between mid and right, move left to mid +1
                    left = mid + 1;
                } else { // if not, move right mid - 1;
                    right = mid - 1;
                }
            } else { // if mid greater than left
                if (nums[left] <= target && target <= nums[mid]) {
                    right = mid - 1;
                } else {
                    left = mid + 1;
                }
            }
        }
        return -1;
    }
};
