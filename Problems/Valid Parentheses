class Solution {
public:
    bool isValid(string s) {
        stack<char> st;
        unordered_map<char, char> braces =  {{')', '('}, {']', '['}, {'}', '{'}};
        for (char c : s) { // loop through each char
            if (braces.find(c) == braces.end()) 
                st.push(c);
            else if (!stack.empty() && braces[c] == stack.top())
                st.pop():
            else
                return false;
        }

        return st.empty(); // return whether all parentheses have been matched
    }
};
