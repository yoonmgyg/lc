/*
Gets the Maximum Level Sum through a BFS which gets the sum of a level and updates the maximum
*/
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        if (!root) {
            return 0;
        }

        queue<TreeNode*> q;
        q.push(root);

        int maxSum = root->val;
        int maxLevel = 1;
        int level = 1;

        while (!q.empty()) {
            int sum = 0;
            int levelSize = q.size();
            for (int i = 0; i < levelSize; ++i) {
                TreeNode* curr = q.front(); 
                q.pop();

                if (curr->left) {
                    q.push(curr->left);
                }
                if (curr->right) {
                    q.push(curr->right);
                }
                sum += curr->val;

            }

            if (sum > maxSum) {
                maxSum = sum;
                maxLevel = level;
            }       
     
            level++;

        }

        return maxLevel;
    }
};
