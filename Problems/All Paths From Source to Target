/*
Get all paths from source to target within graph by using BFS within a queue
class Solution {
public:
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        vector <vector<int>> result;
        int n = graph.size();
        int s = 0;
        int e = n;
        vector <int> adj[n];
        for (int i = 0; i < n; i++) // add adjacenct nodes into vector
            for (auto g : graph[i])
                adj[i].push_back(g);
        
        queue <vector<int>> q;
        vector <int> path;
        q.push({0});
        while (!q.empty()) { // loop through queue and all adjacent paths which result in the node n-1
            path = q.front();
            q.pop();
            if (path.back() == n-1)
                result.push_back(path);
            
            for (auto ele : adj[path.back()]){
                vector <int> temp = path;
                temp.push_back(ele);
                q.push(temp);
            }
        }
        return result;
    }
};
