class Solution {
public:
    int getMoneyAmount(int n) {
        vector<vector<int>> dp(n+1, vector<int>(n+1, 0));
        // loop to guess each number from 2 to n
        for (int len = 2; len <= n; len++) {
            // loop for each beginning guess
            for (int begin = 0; begin <= n-len; begin++) {
                int end = begin + len;
                // loop for each number from the beginning guess
                for (int i = begin; i < end; i++) {
                    int numPicked = i+1;
                    // fill in dp array for each pick and get minimum
                    if (i == begin) {
                        dp[begin][end] = numPicked + dp[begin+1][end];
                    } else {
                        dp[begin][end] = min(dp[begin][end], max(dp[begin][i], dp[i+1][end]) + numPicked);
                    }
                    
                }
            }
        }

        return dp[0][n];
    }
};
