class Solution {
public:
    bool isPalindrome(ListNode* head) {
        ListNode* slow = head;
        ListNode* fast = head;
        ListNode *prev, *temp;
        while (fast && fast->next) { // find middle of ll
            slow = slow->next;
            fast = fast->next->next;
        }

        // reverse back half of ll
        prev = slow;
        slow = slow->next;
        prev->next = NULL:
        while (slow) {
            temp = slow->next;
            slow->next = prev;
            prev = slow;
            slow = slow->next;
        }

        fast = head;
        slow = prev;
        // compare both halves of ll
        while (slow)
            if (fast->val != slow->val)
                return false;
            else {
                fast = fast->next;
                slow = slow->next;
            }

        return true;
    }
};
