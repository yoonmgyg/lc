class Solution {
public:
    int maxPoints(vector<vector<int>>& pt) {
        int ans = 1; 
        int n = pt.size();
        // iterate through all points
        for(int i = 0; i < n-1 ;i++){
            map<double,int> mp;
            // get the slope point through all other points
            for(int j = i+1; j < n; j++){
                // calculate slope
                double x = (double)(pt[j][1] - pt[i][1]) / (double)(pt[j][0] - pt[i][0]);
                // check if perpendicular
                if(pt[j][1] - pt[i][1] < 0 && (pt[j][0] - pt[i][0]) == 0 ) 
                  mp[abs(x)]++; 
                // store slope into map, additional points if slopes are the same
                else
                  mp[x]++;
            }
            // go through each slope
            int temp = 0;
            for(auto it : mp)
                // get the max points within each slope
                temp = max(temp, it.second+1);   
            ans = max(temp, ans);
        }
        return ans;
    }
};
