class Solution {
public:
    int firstBadVersion(int n) {
        long long int left = 0;
        long long int right = n;
        long long int first = n; 
        while (left <= right) { // binary serach to find bad version
            long long int mid = left + (right - left) / 2; 
            if (isBadVersion(mid)) { // if bad, adjust window to the right
                first = mid;
                right =  mid - 1;
            } else { // otherwise, adjust window to left
                left = mid + 1;
            }
            
        }
        return first;
    }
};
