/*
CPP
Counts bits using a DP vector which stores previous numbers of bits and uses the bit / 2 to calculate the number of bits
T: O(n)
S: O(n)
*/
class Solution {
public:
    vector<int> countBits(int n) {
        vector<int> dp(n);
        dp.push_back(0);
        for (int i = 1; i < n + 1; ++i) {
            dp[i] = dp[i/2] + i % 2;
        }

        return dp;
    }
};

# Python
class Solution:
    def countBits(self, n: int) -> List[int]:
        dp = [0] * (n + 1)
        sub = 1
        for i in range (1, n + 1):
            if (sub * 2 == i):
                sub = i
            
            dp[i] = dp[i - sub] + 1

        return dp
