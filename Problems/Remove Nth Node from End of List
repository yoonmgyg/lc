/*
Gets Nth node from end by moving fast pointer n spaces and moving slow pointer while fast pointer exists
*/
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* dummy = new ListNode(0); // create dummy node for return
        dummy->next = head;

        ListNode* fast = dummy;
        ListNode* slow = dummy;
        for (int i = 0; i <= n; i++) { // advance fast by n
            fast = fast->next;
        }

        while (fast) { // move slow while fast exists
            fast = fast->next;
            slow = slow->next;
        }
        ListNode* tmp = slow->next->next; // delete the nth node
        delete slow->next;
        slow->next = tmp;

        return dummy->next;
    }
};
