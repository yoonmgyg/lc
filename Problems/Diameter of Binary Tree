/*
Calculates the maximum diameter of BST through a DFS of branches for length, storing tha maximum of left and right branches in global variable
*/
class Solution {
private:
    int diameter = 0;
    int lengthOfTree(TreeNode* root) {
        if (!root) {
            return 0;
        }

        int left = lengthOfTree(root->left);
        int right = lengthOfTree(root->right);
        diameter = max(diameter, left + right);
        return max(left, right) + 1;
    }
public:
    int diameterOfBinaryTree(TreeNode* root) {
        lengthOfTree(root);
        return diameter;

    }
};
