/*
Traverse matrix in spiral pattern by turning clockwise whenever a boundary is hit
*/
class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int rows = matrix.size();
        int cols = matrix[0].size();
        int x = 0;
        int y = 0;
        int dx = 1;
        int dy = 0;

        vector<int> res;
        for (int i = 0; i < rows * cols; i++) {
            res.push_back(matrix[y][x]);
            matrix[y][x] = -1;

            // when hitting boundary, turn clockwise
            if (x + dx < 0 || x + dx >= cols || y + dy < 0 || y + dy >= rows || matrix[y + dy][x + dx] == -101) {
                int temp = dx;
                dx = -dy;
                dy = temp;
            }

            x += dx;
            y += dy;
        }
        return res;
    }
};
