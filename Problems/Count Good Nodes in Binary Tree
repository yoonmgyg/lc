/*
Counts nodes less than the nodes of its path through a DFS which stores the maximum value
*/

class Solution {
private: 
    int dfs(TreeNode* root, int maxPath) {
        if (!root) {
            return 0;
        }
        int left = dfs(root->left, max(maxPath, root->val)); 
        int right = dfs(root->right, max(maxPath, root->val));
        int goodNodes = left + right; 
        if (maxPath <= root->val) { // if greater than max, count as good
            goodNodes++;
        }

        return goodNodes;

    }
public:
    int good = 0;
    int goodNodes(TreeNode* root) {
        good = dfs(root, root->val);
        return good;
    }
};
