// function to find number of islands in grid vector
class Solution {
private:
    // function to erase all adjacent land recursively
    void findIslands(vector<vector<char>>& grid, int i, int j) {
        if (i < 0 || j < 0 || i >= grid.size() || j >=grid[0].size() || grid[i][j] != '1') {
            return;
        }
        grid[i][j] = '0';
        // use for adjacent grid tiles
        findIslands(grid, i + 1, j);
        findIslands(grid, i - 1, j);
        findIslands(grid, i, j + 1);
        findIslands(grid, i, j - 1);
    }
public:
    int numIslands(vector<vector<char>>& grid) {
        if (grid.empty() || grid[0].empty()) {
            return 0;
        }
        
        int islands = 0;
        // loop through all grid tiles
        for (int i = 0; i < grid.size(); i++) {
            for (int j = 0; j < grid[0].size(); j++) {
                // if land is found, erase all adjacent lands and increment by one
                if (grid[i][j] == '1') {
                    islands++;
                    findIslands(grid, i, j);
                }
            }
        }
        return islands;
    }
};
