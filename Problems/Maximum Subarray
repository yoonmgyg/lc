/*
CPP
Uses Kadane's algorithm to add to current sum and return max
T: O(n)
S: O(1)
*/
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int maxSum = INT_MIN;
        int currentSum = 0;
        
        for (auto no : nums) { // loop through nums
            currentSum = max(no, currentSum + no); // add to currentSum if greater
            maxSum = max(maxSum, currentSum); // set to max if greatest
        }
        
        return maxSum;
    }
};

# Python
class Solution:
    def maxSubArray(self, nums):
        cur_max = 0 
        max_sum = -inf
        for c in nums:
            cur_max = max(c, cur_max + c)
            max_sum = max(max_sum, cur_max)
        return max_sum
