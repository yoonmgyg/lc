class Solution {
public:
    vector<int> findBall(vector<vector<int>>& grid) {
        std::vector<int> result(grid[0].size(), -1);
        // loop through columns
        for (int col = 0; col < grid[0].size(); col++) {
            int currentColumn = col;
            // loop through each row
            for (int row = 0; row < grid.size(); row++) {
                // get diagonal and check if ball is in grid and meets pattern
                int nextColumn = currentColumn + grid[row][currentColumn];
                if (nextColumn < 0 || nextColumn > grid[0].size() - 1 ||
                    grid[row][currentColumn] != grid[row][nextColumn]) {
                    break;
                }
                // if at bottom, add to result
                if (row == grid.size() - 1) {
                    result[col] = nextColumn;
                }
                currentColumn = nextColumn;
            }
        }
        return result;
    }
};
