/*
Finds a pair of 3 integers which sum to 0 by looping through each number and performing a 2 sum algorithm on each
*/
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> res;
        sort(nums.begin(), nums.end());

        for (int i = 0; i < nums.size() - 2; i++) { // loop through each i until size - 2
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;  // skip same i
            }
            int j = i + 1;
            int k = nums.size() - 1;
            while (j < k) { // two pointer with j and k
                int tSum = nums[i] + nums[j] + nums[k];
                if (tSum == 0) {
                    res.push_back({nums[i], nums[j], nums[k]});
                    while (j < k && nums[j] == nums[j + 1]) { // skip same j
                        j++;
                    }
                    while (j < k && nums[k] == nums[k - 1]) { // skip same k
                        k--;
                    }
                    j++;
                    k--;
                } else if (tSum > 0) { // move k  if greater than 0
                    k--;
                } else { // move j if less than 0
                    j++;
                }
            }
        }
        return res;
    }
};
