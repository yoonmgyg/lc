/* 
Sort array with 0, 1, and 2 using 3 pointers at the left, middle, and right of the array
*/
class Solution {
public:
    void sortColors(vector<int>& nums) {
        int left = 0;
        int mid = 0;
        int right = nums.size() - 1;
        while (mid <= right) {
            switch(nums[mid]) {
                case 0: // swap to left if 0
                    swap(nums[left], nums[mid]);
                    left++;
                    mid++;
                    break;
                case 1: // keep if 1
                    mid++;
                    break;
                case 2: // swap to right if 2
                    swap(nums[mid], nums[right]);
                    right--;
                    break;
            }
        }
    }
};
