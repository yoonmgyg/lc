/*
Gets the amount of rainwater trapped if height is an elevation map with a width of 1 by finding the minimum height of local maximums
*/
class Solution {
public:
    int trap(vector<int>& height) {
        int left = 0, right = height.size() - 1;
        int lMax = height[left], rMax = height[right];
        int total = 0;

        while (left < right) { // loop through height
            if (lMax < rMax) { // if left is smaller, subtract current height from left height to get water
                left++;
                lMax = max(lMax, height[left]);
                total += lMax - height[left];
            } else { // if right is smaller, subtract current height from right height to get water
                right--;
                rMax = max(rMax, height[right]);
                total += rMax - height[right];
            }
        }

        return total;
    }
};
