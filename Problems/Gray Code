class Solution {
public:
    void helper(int n, vector<int>& res) {
        if (n == 1) { // add gray code for 1
            res.push_back(0);
            res.push_back(1);
            return;
        
        }
        helper(n-1, res); // backtrack until n = 1
        int i = res.size() - 1;
        while (i >= 0) { // loop and shift bits left equal to n
            int val = res[i] | 1 << (n-1);
            res.push_back(val); // add gray bit results for n
            i--;
        }
    }
    vector<int> grayCode(int n) {
        vector<int> res;
        helper(n,res);
        return res;

    }
};
