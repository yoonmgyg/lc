#include <vector>
#include <string>
using namespace std;

class Solution {
public:
    vector<string> validStrings(int n) {
        vector<string> result;
        string sb;
        generateStrings(result, sb, n, -1);
        return result;
    }

private:
    void generateStrings(vector<string>& result, string& sb, int n, int lastChar) {
        if (sb.length() == n) {
            result.push_back(sb);
            return;
        }

        // add 1 to binary string
        sb.push_back('1');

        // recursively generate additional strings for subsets
        generateStrings(result, sb, n, 1);
        sb.pop_back();

        // add 0 if last character asn't 0
        if (lastChar != 0) {
            sb.push_back('0');
            generateStrings(result, sb, n, 0);
            sb.pop_back();
        }
    }
};
