class Solution {
public:
    bool isMirror(TreeNode* leftNode, TreeNode* rightNode) {
        if (!leftNode && !rightNode) // true if both are null
            return true;
        if (!leftNode || !rightNode) // false if one is null
            return false;
        // check if current nodes and mirrored children are equal
        return (leftNode->val == rightNode->val) && isMirror(leftNode->left, rightNode->right) && isMirror(leftNode->right, rightNode->left);
    }

    bool isSymmetric(TreeNode* root) {
        if (!root) 
            return true;
        return isMirror(root->left, root->right);
    }
};
