class Solution {
  public:
  ListNode* rotateRight(ListNode* head, int k) {
      if (head == nullptr || head->next == nullptr || k == 0) {
          return head;
      }
  
      // Count number of nodes
      int length = 1;
      ListNode* tail = head;
      while (tail->next != nullptr) {
          tail = tail->next;
          length++;
      }
  
      // Adjust k to linked list length
      k = k % length;
  
      if (k == 0) {
          return head;
      }
  
      // Find new tail and new head 
      int stepsToNewTail = length - k - 1;
      ListNode* newTail = head;
      for (int i = 0; i < stepsToNewTail; i++) {
          newTail = newTail->next;
      }
      ListNode* newHead = newTail->next;
  
      newTail->next = nullptr;
      tail->next = head;
  
      return newHead;
  }
};
