class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        vector<vector<int>> res;
        int n = intervals.size();
        for (int i = 0; i < n; i++) {
            vector<int> inter = intervals[i];
            if (inter[1] < newInterval[0]) { // push current if newYnterval is not within
                res.push_back(inter);
            }
            else if (inter[0] > newInterval[1]) { // push new if newInterval's end is before current interval's start
                res.push_back(newInterval);
                newInterval = inter;
            }
            else { // if within interval, merge intervals
                newInterval[0] = min(inter[0], newInterval[0]);
                newInterval[1] = max(inter[1], newInterval[1]);
            }
        }
        res.push_back(newInterval);
        return res;
}
