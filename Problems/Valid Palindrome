/*
CPP solution, with 2 pointers, to compare evry alphanumerical order
T: O(n)
S: O(1)
*/
class Solution {
public:
    bool isPalindrome(string s) {
        int left = 0;
        int right = s.size() - 1;
        while (left < right) {
            if (!isalnum(s[left])) { // skip if not alphanumerical
                left++;
            } else if (!isalnum(s[right])) {
                right--;
            } else if (tolower(s[left]) != tolower(s[right])) { // check if lowercase letters are the same
                return false;
            } else { // move towards center
                ++left;
                --right;
            }
        }
        return true;
    }
};

# Python
class Solution:
    def isPalindrome(self, s: str) -> bool:
        left = 0
        right = len(s) - 1

        while left < right:
            if not s[left].isalnum():
                left += 1
            elif not s[right].isalnum():
                right -= 1
            elif s[left].lower() != s[right].lower():
                return False
            else:
                left += 1
                right -= 1
            
        return True
