/*
Gets the level order through a BFS through each level
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> res;
        if (!root) {
            return res;
        }

        queue<TreeNode*> q;
        q.push(root);

        while (!q.empty()) {
            vector<int> row;
            int levelLen = q.size();
            for (int i = 0; i < levelLen; ++i) {
                TreeNode* curr = q.front();
                q.pop();

                if (curr->left) {
                    q.push(curr->left);
                }
                if (curr->right) {
                    q.push(curr->right);
                }
                row.push_back(curr->val);
            }
            res.push_back(row);
        }
        return res;
        
    }
};
