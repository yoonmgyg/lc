// return vector of tree ordered by levels
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> result;
        vector<int> temp;
        // check if empty
        if(root == nullptr)
            return result;
        // push tree into queue
        queue<TreeNode*> levels;
        levels.push(root);
        
        while(!levels.empty()){
            int size = levels.size();
            TreeNode* current;
            // loop throughout tree and push each branch before removing
            for (int i = 0; i < size; i++){
                current = levels.front();
                temp.push_back(current->val);
                if (current->left)
                    levels.push(current->left);
                if (current->right)
                    levels.push(current->right);
                levels.pop();
            }
            // push back the root of the level for the result
            result.push_back(temp);
            temp.clear();
        }
        return result;
    }
};
