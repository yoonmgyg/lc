class Solution {
public:
    TreeNode* createTree(vector<int>& nums, int low, int high) {
        if (low > high) {
            return nullptr;
        } 

        int mid = low + (high - low) / 2;
        TreeNode* root = new TreeNode(nums[mid]);
        root->left = createTree(nums, low, mid - 1);
        root->right = createTree(nums, mid + 1, high);
        return root;
  
    }
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        return createTree(nums, 0, nums.size() - 1);
    }
    
};
