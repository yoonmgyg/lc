/*
Gets K largest elements by inserting into priority queue and gettings its top k elements
*/
Class Solution {
public:
    vector<int> kLargest(vector<int>& nums, int k) {
        vector<int> res;
        priority_queue<int> maxHeap;
        for (int i = 0; i < nums.size(); ++i) {
            maxHeap.push(nums[i]);
        }
        for (int i = 0; i < k; ++i) {
            res.push_back(maxHeap.top());
            maxHeap.pop();
        }
        return res;
    }
};
