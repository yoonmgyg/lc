class MinStack {
public:
    stack<pair<int, int>> nums; // store top and minimum number
    MinStack() { 
    }
    
    void push(int val) {
        if (nums.empty()) {
            nums.push({val, val}); // push as both vals if empty
        } else {
            nums.push({val, min(val, nums.top().second)}); // store value and minimum value thus far
        }
        
    }
    
    void pop() {
        nums.pop(); // remove top from stack
    }
    
    int top() {
        return nums.top().first; // get first value as value of top
    }
    
    int getMin() {
        return nums.top().second; // get second value as minimum
    }
};
