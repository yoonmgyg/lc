class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int left, int right) {
    // check if empty
    if (!head)
      return nullptr;
    
    // create temporary node to store left node
    ListNode* temp = new ListNode(0);
    temp->next = head;
    
    // move to node before leftnode
    ListNode* prev = temp;
    for (int i = 0; i < left - 1; i++) {
        prev = prev->next;
    }
    
    // set current as left node and after as node afterwards
    ListNode* current = prev->next;
    ListNode* after;

    // loop from left to right swapping the nodes between left and right
    for (int i = 0; i < right - left; i++) {
        after = current->next;
        current->next = after->next;
        after->next = prev->next;
        prev->next = next;
    }
    
    return temp->next;

    }
};
